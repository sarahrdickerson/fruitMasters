


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; SSD1306_OutChar   outputs a single 8-bit ASCII charact
                       er
   10 00000000         ; SSD1306_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           SSD1306_OutChar
   13 00000000                 IMPORT           SSD1306_OutString
   14 00000000                 PRESERVE8
   15 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   16 00000000                 THUMB
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   21 00000000         ; Output a 32-bit number in unsigned decimal format
   22 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   23 00000000         ; Output: none
   24 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   25 00000000 00000000 
                       n       EQU              0           ; input parameter
   26 00000000         
   27 00000000         LCD_OutDec
                               PROC
   28 00000000                 EXPORT           LCD_OutDec
   29 00000000         ;put your Lab 7 solution here
   30 00000000 B501            PUSH{R0,         LR}
   31 00000002         
   32 00000002         ;base case 
   33 00000002 2809            CMP              R0, #9
   34 00000004 D914            BLS              base
   35 00000006         
   36 00000006         ;divide n by ten
   37 00000006 F04F 020A       MOV              R2, #10
   38 0000000A FBB0 F0F2       UDIV             R0, R2
   39 0000000E         
   40 0000000E         ;call function with new parameter
   41 0000000E F7FF FFFE       BL               LCD_OutDec
   42 00000012         
   43 00000012         ;find modulo of n and output it to display
   44 00000012 F04F 020A       MOV              R2, #10
   45 00000016 9900            LDR              R1, [SP, #n]
   46 00000018 460B            MOV              R3, R1
   47 0000001A FBB1 F1F2       UDIV             R1, R2
   48 0000001E FB01 F102       MUL              R1, R2
   49 00000022 EBA3 0001       SUB              R0, R3, R1
   50 00000026         



ARM Macro Assembler    Page 2 


   51 00000026 F100 0030       ADD              R0, #0x30
   52 0000002A F7FF FFFE       BL               SSD1306_OutChar
   53 0000002E E003            B                done
   54 00000030         
   55 00000030         base
   56 00000030 F100 0030       ADD              R0, #0x30
   57 00000034 F7FF FFFE       BL               SSD1306_OutChar
   58 00000038         
   59 00000038         ;return to previous function call
   60 00000038         done
   61 00000038 B001            ADD              SP, #4
   62 0000003A BD00            POP{PC}
   63 0000003C                 ENDP
   64 0000003C         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   65 0000003C         
   66 0000003C         ; -----------------------LCD _OutFix--------------------
                       --
   67 0000003C         ; Output characters to LCD display in fixed-point format
                       
   68 0000003C         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   69 0000003C         ; Inputs:  R0 is an unsigned 32-bit number
   70 0000003C         ; Outputs: none
   71 0000003C         ; E.g., R0=0,    then output "0.00 "
   72 0000003C         ;       R0=3,    then output "0.03 "
   73 0000003C         ;       R0=89,   then output "0.89 "
   74 0000003C         ;       R0=123,  then output "1.23 "
   75 0000003C         ;       R0=999,  then output "9.99 "
   76 0000003C         ;       R0>999,  then output "*.** "
   77 0000003C         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   78 0000003C 00000000 
                       m       EQU              0
   79 0000003C 00000004 
                       count   EQU              4
   80 0000003C        B 
                       FP      RN               11
   81 0000003C         LCD_OutFix
                               PROC
   82 0000003C                 EXPORT           LCD_OutFix
   83 0000003C E92D 4800       PUSH{R11,        LR}
   84 00000040 B082            SUB              SP, #8
   85 00000042 46EB            MOV              R11, SP
   86 00000044 F8CB 0000       STR              R0, [R11, #m]
   87 00000048 F04F 0100       MOV              R1, #0
   88 0000004C F8CB 1004       STR              R1, [R11, #count]
   89 00000050 F04F 020A       MOV              R2, #10
   90 00000054         
   91 00000054         
   92 00000054         
   93 00000054 4601            MOV              R1, R0
   94 00000056 F5B1 7F7A       CMP              R1, #1000
   95 0000005A D310            BLO              inRange
   96 0000005C         ;if not in range, output *.**
   97 0000005C F04F 002A       MOV              R0, #0x2A
   98 00000060 F7FF FFFE       BL               SSD1306_OutChar
   99 00000064 F04F 002E       MOV              R0, #0x2E
  100 00000068 F7FF FFFE       BL               SSD1306_OutChar
  101 0000006C F04F 002A       MOV              R0, #0x2A
  102 00000070 F7FF FFFE       BL               SSD1306_OutChar



ARM Macro Assembler    Page 3 


  103 00000074 F04F 002A       MOV              R0, #0x2A
  104 00000078 F7FF FFFE       BL               SSD1306_OutChar
  105 0000007C E026            B                doneF
  106 0000007E         
  107 0000007E         ;if in range, isolate each digit of the number and push 
                       onto the stack (up to 3 digits)
  108 0000007E         inRange
  109 0000007E F8DB 0000       LDR              R0, [R11, #m]
  110 00000082 4601            MOV              R1, R0
  111 00000084         
  112 00000084 FBB0 F0F2       UDIV             R0, R2
  113 00000088 F8CB 0000       STR              R0, [R11, #m]
  114 0000008C FB00 F002       MUL              R0, R2
  115 00000090         
  116 00000090 EBA1 0000       SUB              R0, R1, R0
  117 00000094 B421            PUSH{R0,         R5}
  118 00000096         
  119 00000096 F8DB 3004       LDR              R3, [R11, #count]
  120 0000009A F103 0301       ADD              R3, #1
  121 0000009E F8CB 3004       STR              R3, [R11, #count]
  122 000000A2 2B03            CMP              R3, #3
  123 000000A4 D3EB            BLO              inRange
  124 000000A6         
  125 000000A6         ;pop each digit and output to the OLED (with a decimal p
                       oint after first digit)
  126 000000A6 BC21            POP{R0,          R5}
  127 000000A8 F100 0030       ADD              R0, #0x30
  128 000000AC F7FF FFFE       BL               SSD1306_OutChar
  129 000000B0         
  130 000000B0 F04F 002E       MOV              R0, #0x2E
  131 000000B4 F7FF FFFE       BL               SSD1306_OutChar
  132 000000B8         
  133 000000B8 BC21            POP{R0,          R5}
  134 000000BA F100 0030       ADD              R0, #0x30
  135 000000BE F7FF FFFE       BL               SSD1306_OutChar
  136 000000C2         
  137 000000C2 BC21            POP{R0,          R5}
  138 000000C4 F100 0030       ADD              R0, #0x30
  139 000000C8 F7FF FFFE       BL               SSD1306_OutChar
  140 000000CC         
  141 000000CC         ;deallocation
  142 000000CC         doneF
  143 000000CC B002            ADD              SP, #8
  144 000000CE E8BD 4800       POP{R11,         LR}
  145 000000D2 4770            BX               LR
  146 000000D4                 ENDP
  147 000000D4                 ALIGN
  148 000000D4         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  149 000000D4         
  150 000000D4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  151 000000D4                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab_10 -IC:\Users\sarah\AppData\Loc
al\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\sarah\AppData\Local\
Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 533" --predefine="_RTE_ SETA 1" --predefi
ne="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 15 in file print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 27 in file print.s
   Uses
      At line 28 in file print.s
      At line 41 in file print.s

LCD_OutFix 0000003C

Symbol: LCD_OutFix
   Definitions
      At line 81 in file print.s
   Uses
      At line 82 in file print.s
Comment: LCD_OutFix used once
base 00000030

Symbol: base
   Definitions
      At line 55 in file print.s
   Uses
      At line 34 in file print.s
Comment: base used once
done 00000038

Symbol: done
   Definitions
      At line 60 in file print.s
   Uses
      At line 53 in file print.s
Comment: done used once
doneF 000000CC

Symbol: doneF
   Definitions
      At line 142 in file print.s
   Uses
      At line 105 in file print.s
Comment: doneF used once
inRange 0000007E

Symbol: inRange
   Definitions
      At line 108 in file print.s
   Uses
      At line 95 in file print.s
      At line 123 in file print.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000004

Symbol: count
   Definitions
      At line 79 in file print.s
   Uses
      At line 88 in file print.s
      At line 119 in file print.s
      At line 121 in file print.s

m 00000000

Symbol: m
   Definitions
      At line 78 in file print.s
   Uses
      At line 86 in file print.s
      At line 109 in file print.s
      At line 113 in file print.s

n 00000000

Symbol: n
   Definitions
      At line 25 in file print.s
   Uses
      At line 45 in file print.s
Comment: n used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SSD1306_OutChar 00000000

Symbol: SSD1306_OutChar
   Definitions
      At line 12 in file print.s
   Uses
      At line 52 in file print.s
      At line 57 in file print.s
      At line 98 in file print.s
      At line 100 in file print.s
      At line 102 in file print.s
      At line 104 in file print.s
      At line 128 in file print.s
      At line 131 in file print.s
      At line 135 in file print.s
      At line 139 in file print.s

SSD1306_OutString 00000000

Symbol: SSD1306_OutString
   Definitions
      At line 13 in file print.s
   Uses
      None
Comment: SSD1306_OutString unused
2 symbols
346 symbols in table
